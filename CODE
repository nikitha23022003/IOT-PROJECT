#include "DHT.h"
#define MOTION_SENSOR_PIN  32  // ESP32 pin GIOP32 connected to the OUTPUT pin of motion sensor
#define LED_PIN            05  // ESP32 pin GIOP17 connected to LED's pin
#define DHTPIN 4
#define DHTTYPE DHT22
#define BUZZER           02 

int motionStateCurrent  = LOW; // current  state of motion sensor's pin
int motionStatePrevious = LOW; // previous state of motion sensor's pin
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(9600);                // initialize serial
  pinMode(MOTION_SENSOR_PIN, INPUT); // set ESP32 pin to input mode
  pinMode(LED_PIN, OUTPUT);          // set ESP32 pin to output mode
  pinMode(BUZZER, OUTPUT);          // set ESP32 pin to output mode
  dht.begin();
}

void loop() {
  motionStatePrevious = motionStateCurrent;             // store old state
  motionStateCurrent  = digitalRead(MOTION_SENSOR_PIN); // read new state

  if (motionStatePrevious == LOW && motionStateCurrent == HIGH) { // pin state change: LOW -> HIGH
    Serial.println("Motion detected!, turns LED ON");
    digitalWrite(LED_PIN, HIGH); // turn on
  } 
  else if (motionStatePrevious == HIGH && motionStateCurrent == LOW) { // pin state change: HIGH -> LOW
    Serial.println("Motion stopped!, turns LED OFF");
    digitalWrite(LED_PIN, LOW);  // turn off
  }
  float h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();
  // Read temperature as Fahrenheit (isFahrenheit = true)
  float f = dht.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  // Compute heat index in Fahrenheit (the default)
  float hif = dht.computeHeatIndex(f, h);
  if(hif >= 20)
  {
   digitalWrite(BUZZER, HIGH); // turn on
   digitalWrite(LED_PIN, HIGH);  // turn off
  }
  else
  {
     digitalWrite(BUZZER, LOW); // turn on
     digitalWrite(LED_PIN, LOW);  // turn off
  }
}
